package com.crudetech.tictactoe.delivery.swing.grid;

import com.crudetech.tictactoe.game.Grid;
import com.crudetech.tictactoe.game.LinearRandomAccessGrid;

public class JTicTacToeGridFrame extends javax.swing.JFrame {

    /**
     * Creates new form JTicTacToeGridFrame
     */
    public JTicTacToeGridFrame() {
        initComponents();

        initTicTacToeComponents();
    }

    private void initTicTacToeComponents() {
        ticTacToeGrid = new JTicTacToeGrid();
        ticTacToeGrid.getModel().setGrid(
                LinearRandomAccessGrid.of(
                        Grid.Mark.Cross, Grid.Mark.Nought, Grid.Mark.None,
                        Grid.Mark.None, Grid.Mark.Cross, Grid.Mark.None,
                        Grid.Mark.None, Grid.Mark.Nought, Grid.Mark.Cross
                )
        );


        updateThreeInARowHighlight();

        grid.setViewportView(ticTacToeGrid);

        scoreboard = new JScoreboard();
        overviewPane.setViewportView(scoreboard);
    }


    private void updateThreeInARowHighlight() {
        if (highlightWin.isSelected()) {
            Grid.ThreeInARow three = Grid.ThreeInARow.of(
                    Grid.Mark.Cross,
                    Grid.Location.of(Grid.Row.First, Grid.Column.First),
                    Grid.Location.of(Grid.Row.Second, Grid.Column.Second),
                    Grid.Location.of(Grid.Row.Third, Grid.Column.Third)
            );

            ticTacToeGrid.getModel().highlightThreeInARow(three);
        } else {
            ticTacToeGrid.getModel().unHighlightThreeInARow();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grid = new javax.swing.JScrollPane();
        highlightWin = new javax.swing.JCheckBox();
        overviewPane = new javax.swing.JScrollPane();
        gridToOverviewFill = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        gridToCHeckboxFill = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        highlightWin.setText("Highlight 3 in a row");
        highlightWin.setToolTipText("");
        highlightWin.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                highlightWinStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(grid)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(gridToCHeckboxFill, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(highlightWin))
                                                        .addComponent(overviewPane)))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(158, 158, 158)
                                                .addComponent(gridToOverviewFill, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 263, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(grid, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(49, 49, 49)
                                                .addComponent(gridToCHeckboxFill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(highlightWin)))
                                .addGap(18, 18, 18)
                                .addComponent(gridToOverviewFill, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(overviewPane, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void highlightWinStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_highlightWinStateChanged
        updateThreeInARowHighlight();
    }//GEN-LAST:event_highlightWinStateChanged


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JTicTacToeGridFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JTicTacToeGridFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JTicTacToeGridFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JTicTacToeGridFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new JTicTacToeGridFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane grid;
    private javax.swing.Box.Filler gridToCHeckboxFill;
    private javax.swing.Box.Filler gridToOverviewFill;
    private javax.swing.JCheckBox highlightWin;
    private javax.swing.JScrollPane overviewPane;
    // End of variables declaration//GEN-END:variables
    private JTicTacToeGrid ticTacToeGrid;
    private JScoreboard scoreboard;
}
